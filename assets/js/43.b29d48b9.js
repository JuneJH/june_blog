(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{455:function(a,t,r){"use strict";r.r(t);var e=r(62),_=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"常用工具类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用工具类"}},[a._v("#")]),a._v(" 常用工具类")]),a._v(" "),r("h2",{attrs:{id:"_1-包装类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-包装类"}},[a._v("#")]),a._v(" 1. 包装类")]),a._v(" "),r("blockquote",[r("p",[a._v("8个基础数据类型对应8个包装类(除了int->Integer和char->Character外其余都是首字母大写)\n除了boolean和char其余都继承了"),r("code",[a._v("Number")]),a._v("\n8个包装类都实现了"),r("code",[a._v("Serializable")]),a._v("和"),r("code",[a._v("Comparable")]),a._v("接口")])]),a._v(" "),r("h3",{attrs:{id:"_1-byte-byte"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-byte-byte"}},[a._v("#")]),a._v(" 1. byte -> Byte")]),a._v(" "),r("h3",{attrs:{id:"_2-short-short"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-short-short"}},[a._v("#")]),a._v(" 2. short -> Short")]),a._v(" "),r("h3",{attrs:{id:"_3-int-integer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-int-integer"}},[a._v("#")]),a._v(" 3. int -> Integer")]),a._v(" "),r("h3",{attrs:{id:"_4-long-long"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-long-long"}},[a._v("#")]),a._v(" 4. long -> Long")]),a._v(" "),r("h3",{attrs:{id:"_5-double-double"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-double-double"}},[a._v("#")]),a._v(" 5. double -> Double")]),a._v(" "),r("h3",{attrs:{id:"_6-float-float"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-float-float"}},[a._v("#")]),a._v(" 6. float -> Float")]),a._v(" "),r("h3",{attrs:{id:"_7-char-character"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-char-character"}},[a._v("#")]),a._v(" 7. char -> Character")]),a._v(" "),r("h3",{attrs:{id:"_8-boolean-boolean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-boolean-boolean"}},[a._v("#")]),a._v(" 8. boolean -> Boolean")]),a._v(" "),r("h2",{attrs:{id:"_2-数学相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-数学相关"}},[a._v("#")]),a._v(" 2. 数学相关")]),a._v(" "),r("blockquote",[r("p",[a._v("获取幂次方、平方根、绝对值等数学操作使用"),r("code",[a._v("Math")]),a._v("类")])]),a._v(" "),r("h3",{attrs:{id:"_1-常用方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用方法"}},[a._v("#")]),a._v(" 1. 常用方法")]),a._v(" "),r("ul",[r("li",[a._v("abs()")]),a._v(" "),r("li",[a._v("pow()")]),a._v(" "),r("li",[a._v("max()")])]),a._v(" "),r("h2",{attrs:{id:"_3-日期相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-日期相关"}},[a._v("#")]),a._v(" 3. 日期相关")]),a._v(" "),r("blockquote",[r("p",[a._v("需要对日期进行操作")])]),a._v(" "),r("h2",{attrs:{id:"_4-字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串"}},[a._v("#")]),a._v(" 4. 字符串")]),a._v(" "),r("blockquote",[r("p",[a._v("Java.lang")]),a._v(" "),r("p",[a._v("字面量方式构建")]),a._v(" "),r("p",[a._v("String不可变特性")])]),a._v(" "),r("h5",{attrs:{id:"_1-stringbuffer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-stringbuffer"}},[a._v("#")]),a._v(" 1. StringBuffer")]),a._v(" "),r("ul",[r("li",[a._v("可变,1.0就有了,安全的")])]),a._v(" "),r("h5",{attrs:{id:"_2-stringbuilder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-stringbuilder"}},[a._v("#")]),a._v(" 2. StringBuilder")]),a._v(" "),r("ul",[r("li",[a._v("底层数组是可变的,提高字符串拼接性能")]),a._v(" "),r("li",[a._v("append")]),a._v(" "),r("li",[a._v("insert")]),a._v(" "),r("li",[a._v("delete")]),a._v(" "),r("li",[a._v("deleteChar")]),a._v(" "),r("li",[a._v("reverse")]),a._v(" "),r("li",[a._v("...")])]),a._v(" "),r("h5",{attrs:{id:"_3-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[a._v("#")]),a._v(" 3. 区别")]),a._v(" "),r("ul",[r("li",[a._v("StringBuffer和StringBuilder线程安全区别")]),a._v(" "),r("li",[a._v("String实现接口"),r("code",[a._v("Serializable")]),a._v(","),r("code",[a._v("CharSequence")]),a._v(","),r("code",[a._v("Compare")])]),a._v(" "),r("li",[a._v("StringBuffer和StringBuilder 实现接口"),r("code",[a._v("Serializable")]),a._v(","),r("code",[a._v("CharSequence")]),a._v(","),r("code",[a._v("Appendable")])]),a._v(" "),r("li",[a._v("String是不可变特性"),r("em",[a._v("底层数组是final修饰")])]),a._v(" "),r("li",[a._v("Sting可以通过常量和构造方法赋值,StringBuffer和StringBuilder只能通过构造函数")])]),a._v(" "),r("h2",{attrs:{id:"_5-泛型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-泛型"}},[a._v("#")]),a._v(" 5. 泛型")]),a._v(" "),r("blockquote",[r("p",[a._v("定义一个符号作为类型符号,可以理解为参数传递,不过它传递的是数据类型")]),a._v(" "),r("p",[a._v("泛型不能传递基础数据类型,需要使用其包装类"),r("em",[a._v("包装类才继承Object")])])]),a._v(" "),r("h3",{attrs:{id:"_1-泛型类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-泛型类"}},[a._v("#")]),a._v(" 1. 泛型类")]),a._v(" "),r("ul",[r("li",[a._v("类定义时描述的某一种数据类型")])]),a._v(" "),r("h3",{attrs:{id:"_2-泛型接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-泛型接口"}},[a._v("#")]),a._v(" 2. 泛型接口")]),a._v(" "),r("ul",[r("li",[a._v("与泛型类一致")])]),a._v(" "),r("h3",{attrs:{id:"_3-泛型方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-泛型方法"}},[a._v("#")]),a._v(" 3. 泛型方法")]),a._v(" "),r("ul",[r("li",[a._v("方法调用的时候传参数")])]),a._v(" "),r("h3",{attrs:{id:"_4-规范边界"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-规范边界"}},[a._v("#")]),a._v(" 4. 规范边界")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("extends  ？extends E")]),a._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[a._v("addAll")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collection")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("E")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 规范传入参数是否是构造该集合时传入泛型的子类")]),a._v("\n")])])])]),a._v(" "),r("li",[r("p",[a._v("super")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);