(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{478:function(t,a,_){"use strict";_.r(a);var r=_(62),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"组件设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件设计"}},[t._v("#")]),t._v(" 组件设计")]),t._v(" "),_("blockquote",[_("p",[t._v("react的一个单元就是组件,设计好组件有利于后期开发")])]),t._v(" "),_("h2",{attrs:{id:"_1-展示组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-展示组件"}},[t._v("#")]),t._v(" 1. 展示组件")]),t._v(" "),_("ul",[_("li",[t._v("主要用于来展示样式,属性都来自于props,可以有自己维护的状态,这种状态取之于自身用之于自身")]),t._v(" "),_("li",[t._v("基于展示组件的状态和属性逻辑,所以它的复用性就相当的高")])]),t._v(" "),_("h2",{attrs:{id:"_2-逻辑组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑组件"}},[t._v("#")]),t._v(" 2. 逻辑组件")]),t._v(" "),_("ul",[_("li",[t._v("目前主要可用自定义hook进行抽离,使其逻辑独立于业务代码之外")]),t._v(" "),_("li",[t._v("也可以用高阶组件进行抽离,可能需要进行ref转发和静态属性外部无法获取")]),t._v(" "),_("li",[t._v("render props 基于组件使用方式")])]),t._v(" "),_("h2",{attrs:{id:"_3-代理组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-代理组件"}},[t._v("#")]),t._v(" 3. 代理组件")]),t._v(" "),_("ul",[_("li",[t._v("用于传入默认属性,以便业务组件使用更加方便")]),t._v(" "),_("li",[t._v("隔离第三方组件库,与第三方组件库形成隔离带,当第三方组件库不能使用时不用大面积对业务代码进行修改")])]),t._v(" "),_("h2",{attrs:{id:"_4-业务组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-业务组件"}},[t._v("#")]),t._v(" 4. 业务组件")]),t._v(" "),_("ul",[_("li",[t._v("每个业务必然有不同的业务逻辑,这部分组件复用性比较小")]),t._v(" "),_("li",[t._v("通过业务组件组合以上组件完成业务逻辑任务")])])])}),[],!1,null,null,null);a.default=s.exports}}]);